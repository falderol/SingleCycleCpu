# Makefile automatically generated by ghdl
# Version: GHDL 0.33 (20150921) [Dunoon edition] - llvm code generator
# Command used to generate this makefile:
# ghdl --gen-makefile alu

GHDL=ghdl
GHDLFLAGS=

# Default target
all: alu

# Elaboration target
alu: /usr/lib/ghdl/v93/ieee/std_logic_1164.o /usr/lib/ghdl/v93/ieee/std_logic_1164_body.o word.o op.o zero_flag.o Adder_1Bit.o Adder_32Bit.o MUX_4x1_vector.o ones_flag.o barrel_shifter.o less_than.o xor.o nor.o nand.o complement.o MUX_2x1_vector.o MUX_32x32x1_vector.o MUX_32x1_vector.o alu.o
	$(GHDL) -e $(GHDLFLAGS) $@

# Run target
run: alu
	$(GHDL) -r alu $(GHDLRUNFLAGS)

# Targets to analyze files
/usr/lib/ghdl/v93/ieee/std_logic_1164.o: /usr/lib/ghdl/v93/ieee/../../src/ieee/std_logic_1164.v93
	@echo "This file was not locally built ($<)"
	exit 1
/usr/lib/ghdl/v93/ieee/std_logic_1164_body.o: /usr/lib/ghdl/v93/ieee/../../src/ieee/std_logic_1164_body.v93
	@echo "This file was not locally built ($<)"
	exit 1
word.o: word.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
op.o: op.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
zero_flag.o: Utilities/zero_flag.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
Adder_1Bit.o: Adder/Adder_1Bit.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
Adder_32Bit.o: Adder/Adder_32Bit.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
MUX_4x1_vector.o: MUX/MUX_4x1_vector.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
ones_flag.o: Utilities/ones_flag.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
barrel_shifter.o: Bitwise/barrel_shifter.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
less_than.o: Comparator/less_than.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
xor.o: Bitwise/xor.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
nor.o: Bitwise/nor.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
nand.o: Bitwise/nand.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
complement.o: Bitwise/complement.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
MUX_2x1_vector.o: MUX/MUX_2x1_vector.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
MUX_32x32x1_vector.o: MUX/MUX_32x32x1_vector.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
MUX_32x1_vector.o: MUX/MUX_32x1_vector.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<
alu.o: ALU/alu.vhdl
	$(GHDL) -a $(GHDLFLAGS) $<

# Files dependences
/usr/lib/ghdl/v93/ieee/std_logic_1164.o: 
/usr/lib/ghdl/v93/ieee/std_logic_1164_body.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o
word.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o
op.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o
zero_flag.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o word.o
Adder_1Bit.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o
Adder_32Bit.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o word.o zero_flag.o Adder_1Bit.o
MUX_4x1_vector.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o
ones_flag.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o word.o
barrel_shifter.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o word.o MUX_4x1_vector.o zero_flag.o ones_flag.o
less_than.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o word.o Adder_32Bit.o
xor.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o word.o zero_flag.o
nor.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o word.o zero_flag.o
nand.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o word.o zero_flag.o
complement.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o word.o xor.o
MUX_2x1_vector.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o
MUX_32x32x1_vector.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o word.o MUX_4x1_vector.o MUX_2x1_vector.o
MUX_32x1_vector.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o MUX_4x1_vector.o MUX_2x1_vector.o
alu.o:  /usr/lib/ghdl/v93/ieee/std_logic_1164.o /usr/lib/ghdl/v93/ieee/std_logic_1164_body.o word.o op.o Adder_32Bit.o barrel_shifter.o less_than.o xor.o nor.o nand.o complement.o MUX_32x32x1_vector.o MUX_32x1_vector.o
